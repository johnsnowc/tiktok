// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentsrv

import (
	"context"

	"genuine_douyin/apps/comment/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment                     = comment.Comment
	DouyinCommentActionRequest  = comment.DouyinCommentActionRequest
	DouyinCommentActionResponse = comment.DouyinCommentActionResponse
	DouyinCommentListRequest    = comment.DouyinCommentListRequest
	DouyinCommentListResponse   = comment.DouyinCommentListResponse

	CommentSrv interface {
		CommentAction(ctx context.Context, in *DouyinCommentActionRequest, opts ...grpc.CallOption) (*DouyinCommentActionResponse, error)
		CommentList(ctx context.Context, in *DouyinCommentListRequest, opts ...grpc.CallOption) (*DouyinCommentListResponse, error)
	}

	defaultCommentSrv struct {
		cli zrpc.Client
	}
)

func NewCommentSrv(cli zrpc.Client) CommentSrv {
	return &defaultCommentSrv{
		cli: cli,
	}
}

func (m *defaultCommentSrv) CommentAction(ctx context.Context, in *DouyinCommentActionRequest, opts ...grpc.CallOption) (*DouyinCommentActionResponse, error) {
	client := comment.NewCommentSrvClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultCommentSrv) CommentList(ctx context.Context, in *DouyinCommentListRequest, opts ...grpc.CallOption) (*DouyinCommentListResponse, error) {
	client := comment.NewCommentSrvClient(m.cli.Conn())
	return client.CommentList(ctx, in, opts...)
}
